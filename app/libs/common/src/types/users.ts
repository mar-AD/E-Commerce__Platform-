// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.0.3
//   protoc               v5.27.3
// source: proto/users.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

// export const protobufPackage = "users";

export interface Non {
}

export interface GetUserProfileRequest {
  userId: string;
}

export interface GetUserProfileResponse {
  firstName: string;
  lastName: string;
  phoneNumber: string;
  address: string;
  profilePic: string;
}

export interface UserProfile {
  userId: string;
  profilePic: string;
  firstName: string;
  lastName: string;
  phoneNumber: string;
  address: string;
}

export interface GetAllUserProfilesResponse {
  profiles: UserProfile[];
}

export interface Users {
  id: string;
  userId: string;
  profilePic: string;
  firstName: string;
  lastName: string;
  phoneNumber: string;
  address: string;
}

export const USERS_PACKAGE_NAME = "users";

export interface UsersProfileServiceClient {
  getUserProfile(request: GetUserProfileRequest): Observable<GetUserProfileResponse>;

  getAllUsersProfile(request: Non): Observable<GetAllUserProfilesResponse>;
}

export interface UsersProfileServiceController {
  getUserProfile(
    request: GetUserProfileRequest,
  ): Promise<GetUserProfileResponse> | Observable<GetUserProfileResponse> | GetUserProfileResponse;

  getAllUsersProfile(
    request: Non,
  ): Promise<GetAllUserProfilesResponse> | Observable<GetAllUserProfilesResponse> | GetAllUserProfilesResponse;
}

export function UsersProfileServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getUserProfile", "getAllUsersProfile"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("UsersProfileService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("UsersProfileService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const USERS_PROFILE_SERVICE_NAME = "UsersProfileService";
