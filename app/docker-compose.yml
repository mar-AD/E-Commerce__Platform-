services:
  apigateway:
    build:
      context: ./
      dockerfile: ./apps/apigateway/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "echo 'Starting API Gateway'; npm run start:dev apigateway"
#    develop:
#      watch:
#        - action: sync
#          path: ./apps/apigateway/src
#          target: /usr/src/app/src
#          ignore:
#            - node_modules/
#        - action: rebuild
#          path: package.json

  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - ./apps/auth/.env
    depends_on:
      - auth-db
    ports:
      - '50052:50051'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "echo 'Starting Auth Service'; npm run start:dev auth"
#    develop:
#      watch:
#        - action: sync
#          path: ./apps/auth/src
#          target: /usr/src/app/src
#          ignore:
#            - node_modules/
#        - action: rebuild
#          path: package.json

  email:
    build:
      context: ./
      dockerfile: ./apps/email/Dockerfile
    env_file:
      - .env
      - ./apps/email/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "echo 'Starting email Service'; npm run start:dev email"

#  users:
#    build:
#      context: ./
#      dockerfile: ./apps/users/Dockerfile
#    env_file:
#      - ./apps/users/.env
#    depends_on:
#      - users-db
#    ports:
#      - '50054:50053'
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#    command: sh -c "echo 'Starting users Service'; npm run start:dev users"
#
#
#  admins:
#    build:
#      context: ./
#      dockerfile: ./apps/admins/Dockerfile
#    env_file:
#      - ./apps/admins/.env
#    depends_on:
#      - admins-db
#    ports:
#      - '50056:50055'
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#    command: sh -c "echo 'Starting admins Service'; npm run start:dev admins"


  auth-db:
    image: postgres:16
    env_file:
      - ./apps/auth/.env
    ports:
      - '5433:5432'
    volumes:
      - ./db/auth-data:/var/lib/postgresql/data
      - ./db/init-auth.sql:/docker-entrypoint-initdb.d/init-auth.sql

#  users-db:
#    image: postgres:16
#    env_file:
#      - ./apps/users/.env
#    ports:
#      - '5435:5434'
#    volumes:
#      - ./db/users-data:/var/lib/postgresql/data
#      - ./db/init-users.sql:/docker-entrypoint-initdb.d/init-users.sql
#
#  admins-db:
#    image: postgres:16
#    env_file:
#      - ./apps/admins/.env
#    ports:
#      - '5437:5436'
#    volumes:
#      - ./db/admins-data:/var/lib/postgresql/data
#      - ./db/init-admins.sql:/docker-entrypoint-initdb.d/init-admins.sql

  rabbitmq:
    image: rabbitmq:4.0.4-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env

  postgres_admin:
    image: dpage/pgadmin4
    depends_on:
      - auth-db
    env_file:
      - .env
    ports:
      - '15432:80'