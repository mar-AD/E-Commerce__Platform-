syntax= "proto3";

package auth;

import "google/protobuf/timestamp.proto";

//users
service UserService {
  rpc createUser (CreateUserDto) returns (User);
  rpc userLogin (LoginDto) returns (AuthResponse);
  rpc updateUserPassword (UpdatePasswordRequest) returns (User);
  rpc requestUpdateUserEmail (RequestUpdateEmailRequest) returns (Empty);
  rpc verifyEmailCode (VerifyEmailCodeRequest) returns (Empty);
  rpc updateUserEmail (UpdateEmailRequest) returns (User);
  rpc logoutUser (RefreshTokenDto) returns (Empty);
  rpc userRefreshToken (RefreshTokenDto) returns (AuthResponse);
  rpc userForgotPassword (ForgotPasswordDto) returns (Empty);
  rpc userResetPassword (ResetPasswordRequest) returns (Empty);
  rpc removeUser (FindOneDto) returns (Empty);
  rpc findUser (FindOneDto) returns (User);
}
//Admins
service AdminService {
  rpc createAdmin (CreateAdminDto) returns (Admin);
  rpc adminLogin (LoginDto) returns (AuthResponse);
  rpc updateAdminRole (UpdateAdminRoleRequest) returns (Admin);
  rpc updateAdminPassword (UpdatePasswordRequest) returns (Admin);
  rpc requestUpdateAdminEmail (RequestUpdateEmailRequest) returns (Empty);
  rpc verifyEmailCode (VerifyEmailCodeRequest) returns (Empty);
  rpc updateAdminEmail (UpdateEmailRequest) returns (Admin);
  rpc logoutAdmin (RefreshTokenDto) returns (Empty);
  rpc adminRefreshToken (RefreshTokenDto) returns (AuthResponse);
  rpc adminForgotPassword (ForgotPasswordDto) returns (Empty);
  rpc adminResetPassword (ResetPasswordRequest) returns (Empty);
  rpc removeAdmin (FindOneDto) returns (Empty);
  rpc findOneAdmin (FindOneDto) returns (BooleanResponse);
  rpc permissionsByRole(FindOneDto) returns (Permission);
}

//Roles
service RoleService {
  rpc CreateRole (CreateRoleDto) returns (Role) {}
  rpc GetAllRoles (None) returns (RolesResponse) {}
  rpc GetRoleById (FindOneDto) returns (Role) {}
  rpc UpdateRole (UpdateRoleRequest) returns (Role) {}
  rpc DeleteRole (FindOneDto) returns (Empty) {}
}
//common DTOs

message BooleanResponse {
  bool result = 1;
}

message Permission {
  repeated Permissions permissions = 1;
}
message BaseResponse {
  int32 status = 1;
  string message = 2;
}

message None {}

message Empty {
  BaseResponse result = 1;
}

message LoginDto {
  string email = 1;
  string password = 2;
}

message AuthResponse {
  string accessToken = 1;
  string refreshToken = 2;
  BaseResponse result = 3;
}

message FindOneDto {
  string id = 1;
}

message ForgotPasswordDto {
  string email = 1;
}

message ResetPasswordDto {
  string newPassword = 1;
  string confirmPassword = 2;
}

message RequestEmailUpdateDto {
  string email = 1;
}

message VerifyEmailCodeDto {
  string verificationCode = 1;
}

message RefreshTokenDto {
  string refreshToken = 1;
}

message UpdateEmailDto {
  string email = 2;
}

message UpdatePasswordDto {
  string password = 1;
  string newPassword = 2;
  string confirmPassword = 3;
}

message TokenDto {
  string token = 1;
}

message VerifyEmailCodeRequest {
  VerifyEmailCodeDto verifyEmailCodeDto = 1;
  FindOneDto findOneDto = 2;
}

message ResetPasswordRequest {
    ResetPasswordDto resetPasswordDto = 1;
    TokenDto tokenDto = 2;
}

message UpdatePasswordRequest {
  UpdatePasswordDto updatePasswordDto = 1;
  FindOneDto findOneDto = 2;
}

message RequestUpdateEmailRequest {
  RequestEmailUpdateDto requestEmailUpdateDto = 1;
  FindOneDto findOneDto = 2;
}

message UpdateEmailRequest {
  UpdateEmailDto updateEmailDto = 1;
  FindOneDto findOneDto = 2;
}
//user DTOs
message CreateUserDto {
  string email = 1;
  string password = 2;
}

//admin DTOs
message CreateAdminDto {
  string email = 1;
  string password = 2;
  string role = 3;
}

message UpdateAdminRoleDto {
  string role =1;
}

message UpdateAdminRoleRequest {
  UpdateAdminRoleDto updateAdminRoleDto = 1;
  FindOneDto findOneDto = 2;
}

//role Dto
message RolesResponse {
  repeated Role roles = 1;
  BaseResponse result = 2;
}

message CreateRoleDto {
  string name = 1;
  repeated Permissions permissions = 2;
}

message UpdateRoleDto {
  optional string name = 1;
  repeated Permissions permissions = 2;
}

message UpdateRoleRequest {
  UpdateRoleDto updateRoleDto = 1;
  FindOneDto findOneDto = 2;
}
// user response
message User {
  string id = 1;
  string email = 2;
  bool isActive = 3;
  bool isDeleted = 4;
  bool isEmailVerified = 5;
  google.protobuf.Timestamp createdAt = 6;
  google.protobuf.Timestamp updatedAt = 7;
  google.protobuf.Timestamp deletedAt = 8;
}

// admin response
message Admin {
  string id = 1;
  string roleId = 2;
  string email = 3;
  bool isActive = 4;
  bool isDeleted = 5;
  bool isEmailVerified = 6;
  google.protobuf.Timestamp createdAt = 7;
  google.protobuf.Timestamp updatedAt = 8;
  google.protobuf.Timestamp deletedAt = 9;
}

// role response
message Role {
  string id = 1;
  string name = 2;
  repeated string permissions = 3;
  google.protobuf.Timestamp createdAt = 4;
  google.protobuf.Timestamp updatedAt = 5;
}

enum Permissions {
  PERMISSION_UNSPECIFIED = 0;
  VIEW_DASHBOARD = 1;
  MANAGE_USERS = 2;
  MANAGE_ORDERS = 3;
  MANAGE_PRODUCTS = 4;
  MANAGE_ROLES = 5;
  MANAGE_ADMINS = 6;
}

//refreshToken response
message RefreshToken {
  string id = 1;
  string userId = 2;
  string adminId = 3;
  string token = 4;
  bool revoked = 5;
  google.protobuf.Timestamp expiresAt = 6;
  google.protobuf.Timestamp createdAt = 7;
}

//EmailVerificationCode response
message EmailVerificationCode {
  string id = 1;
  string adminId = 2;
  string userId = 3;
  string code = 4;
  google.protobuf.Timestamp expiresAt = 5;
  google.protobuf.Timestamp createdAt = 6;
}